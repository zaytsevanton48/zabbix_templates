zabbix_export:
  version: '6.0'
  date: '2024-07-04T11:31:48Z'
  groups:
    - uuid: 7df96b18c230490a9a0a9e2307226338
      name: Templates
  templates:
    - uuid: b7d3431159824dedb66a44e6ec4e4e1a
      template: 'EIGRP uptime Cisco'
      name: 'EIGRP uptime Cisco'
      description: 'Create by Zaytsev A.I.'
      groups:
        - name: Templates
      discovery_rules:
        - uuid: 77b0cbdb1c8b42c6ab56bf93e277a67b
          name: 'EIGRP uptime'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#IP},1.3.6.1.4.1.9.9.449.1.4.1.1.3,{#PORTINDEX},1.3.6.1.4.1.9.9.449.1.4.1.1.4]'
          key: eigrp.uptime
          item_prototypes:
            - uuid: a7ea22a45caa461da69160a1bf22c870
              name: 'EIGRP uptime {#IP}'
              type: SNMP_AGENT
              snmp_oid: 'SNMPv2-SMI::enterprises.9.9.449.1.4.1.1.6.{#SNMPINDEX}'
              key: 'eigrp.uptime.[{#IP}]'
              units: min
              description: 'Индекст порта: {#PORTINDEX}'
              preprocessing:
                - type: JAVASCRIPT
                  parameters:
                    - |
                      var string = value.toString();
                      
                      var hour = string.match(/\d+[h]/);
                      var day = string.match(/\d+[d]/);
                      var week = string.match(/\d+[w]/);
                      var year = string.match(/\d+[y]/);
                      
                       if (hour == null) {
                       hour= 0} else {
                       hour = Number((hour.toString()).match(/[^0][0-9]*/).toString()) * 60;
                      }
                      
                       if (day == null)
                       {
                       day = 0} else {
                       day = Number((day.toString()).match(/[^0][0-9]*/).toString()) * 24 * 60
                       }
                       if (week == null) {
                       week = 0} else {
                       week = Number((week.toString()).match(/[^0][0-9]*/).toString()) * 7 * 24 * 60
                       }
                       if (year == null) {
                       year = 0} else {
                       year = Number((year.toString()).match(/[^0][0-9]*/).toString()) * 52 * 7 * 24 * 60
                       }
                       result = hour + day + week + year
                      
                      return result 
              tags:
                - tag: Eigrp
                  value: '{#IP}'
              trigger_prototypes:
                - uuid: f88038ed53f14fadbb28c71e773ede49
                  expression: 'change(/EIGRP uptime Cisco/eigrp.uptime.[{#IP}])<0'
                  name: 'EIGRP FLOP'
                  priority: HIGH
                  tags:
                    - tag: Eigrp
                      value: '{#IP}'
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  function rehex (match, p1, p2, p3, offset, string) {
                  var splitData = match.split(" ");
                  for (var i = 0; i < splitData.length; i++){
                      splitData[i] = parseInt(splitData[i], 16);
                  }
                  
                  var ip = splitData.join(".");
                  return ip
                  }
                  
                  var string = value.toString()
                  re= /[0-9a-fA-F][0-9a-fA-F] [0-9a-fA-F][0-9a-fA-F] [0-9a-fA-F][0-9a-fA-F] [0-9a-fA-F][0-9a-fA-F]/g
                  return string.replace(re, rehex )
      tags:
        - tag: Eigrp
          value: uptime
